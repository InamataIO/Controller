; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
custom_firmware_version = 1.13.0
build_flags = 
	-D ARDUINOJSON_USE_LONG_LONG=1
	-D _TASK_STATUS_REQUEST
	-D _TASK_TIMEOUT
	-D _TASK_OO_CALLBACKS
	-D _TASK_TIMECRITICAL
	-D _TASK_WDT_IDS
	-D _TASK_DEBUG
	-D _TASK_EXPOSE_CHAIN
	-D PROV_IMPROV
	; -D PROV_WIFI
lib_deps = 
	arkhipenko/TaskScheduler@^3.8.5
	bblanchon/ArduinoJson@^7.4.1
	; links2004/WebSockets@^2.4.1
	tzapu/WiFiManager@^2.0.17
board_build.filesystem = littlefs
build_unflags = -fno-rtti
monitor_speed = 115200
upload_speed = 921600
extra_scripts = pre:insert_firmware_version.py

[dbg]
; build_type = debug
; monitor_filters = esp32_exception_decoder
build_flags =
	-D ENABLE_TRACE
	; -D AC_DEBUG
	; -D DEBUG_ESP_PORT=Serial
	; -D CONFIG_NIMBLE_CPP_LOG_LEVEL=4

[mainline]
lib_deps = 
	milesburton/DallasTemperature@^3.11.0
	claws/BH1750@^1.1.4
	robtillaart/Max44009@^0.6.0
	SparkFun BME280@^2.0.1
	Adafruit NeoPixel@^1.15.1
	adafruit/Adafruit ADS1X15@^2.5.0
	dfrobot/DFRobot_SGP40@^1.0.4
	lime-labs/Lime Labs HDC2080@^1.1.2
	git+https://github.com/InamataCo/ezo-i2c-sensors.git#v3
	; esphome/Improv@^1.2.3
	h2zero/NimBLE-Arduino@^2.3.0
	thomasfredericks/Bounce2@^2.72
	dfrobot/DFRobot_GP8XXX@^1.0.1
	miq19/eModbus@^1.7.2
	adafruit/RTClib@^2.1.4
	inamata/PCA9539@^1.1.1
	beirdo/PCA9536D@^2.0.1
[gsm]
lib_deps =
	digitaldragon/SSLClient@^1.3.2
	vshymanskyy/StreamDebugger@^1.0.1
	vshymanskyy/TinyGSM@^0.12.0

[esp32]
platform = espressif32@6.11.0
; Bug in FSImpl.h introduced in 2.0.6. Resolved in 3.0.0-alpha3
; https://github.com/espressif/arduino-esp32/issues/7585#issuecomment-1894210320
; platform_packages = framework-arduinoespressif32@https://github.com/espressif/arduino-esp32#2.0.5
board = esp32doit-devkit-v1
board_build.partitions = min_spiffs.csv
framework = arduino
build_unflags = ${env.build_unflags}
monitor_speed = ${env.monitor_speed}
upload_speed = ${env.upload_speed}
extra_scripts = ${env.extra_scripts}
board_build.embed_files = data/cert/x509_crt_bundle.bin

[esp32-s3]
build_flags = 
	-D ARDUINO_ESP32S3
platform = espressif32@6.11.0
; Bug in FSImpl.h introduced in 2.0.6. Resolved in 3.0.0-alpha3
; https://github.com/espressif/arduino-esp32/issues/7585#issuecomment-1894210320
board = esp32-s3-devkitc-1
board_build.partitions = default_8MB.csv
framework = arduino
build_unflags = ${env.build_unflags}
monitor_speed = ${env.monitor_speed}
extra_scripts = ${env.extra_scripts}
board_build.embed_files = data/cert/x509_crt_bundle.bin

[env:esp32doit-devkit-v1]
custom_firmware_name = ima_esp32
extends = esp32
lib_deps = 
	${env.lib_deps}
	${mainline.lib_deps}
build_flags = 
	${env.build_flags}
	-D DEVICE_TYPE_NAME='"Inamata ESP32"'
	-D DEVICE_TYPE_ID='"e339a3eb-65c9-4fa4-8711-de50c50fad35"'

[env:esp32doit-devkit-v1-dbg]
custom_firmware_name = ima_esp32_dbg
extends = env:esp32doit-devkit-v1
lib_deps =
	${env.lib_deps}
	${mainline.lib_deps}
build_flags =
	${env:esp32doit-devkit-v1.build_flags}
	${dbg.build_flags}
	; -D CORE_DEBUG_LEVEL=5
monitor_filters = esp32_exception_decoder
build_type = debug
board_build.partitions = huge_app.csv

[env:esp32-gsm-plug-dbg]
custom_firmware_name = ima_esp32_gsm_plug_dbg
extends = esp32
lib_deps =
	${env.lib_deps}
	${mainline.lib_deps}
	${gsm.lib_deps}
build_flags =
	${env.build_flags}
	${dbg.build_flags}
	-D DEVICE_TYPE_NAME='"Inamata GSM Plug"'
	-D DEVICE_TYPE_ID='"d962e7cc-1844-4c28-9a36-3172dd0fc245"'
	-D WEBSOCKETS_NETWORK_TYPE=10
	-D TINY_GSM_MODEM_SIM7600
	-D LOGGING
	-D DEBUG_ESP_PORT=Serial
	; -D CORE_DEBUG_LEVEL=5
monitor_filters = esp32_exception_decoder
build_type = debug
board_build.partitions = huge_app.csv

[env:esp32-s3-devkitc-1]
custom_firmware_name = ima_esp32_s3
extends = esp32-s3
lib_deps = 
	${env.lib_deps}
	${mainline.lib_deps}
build_flags = 
	${env.build_flags}
	${esp32-s3.build_flags}
	-D DEVICE_TYPE_NAME='"Inamata ESP32-S3"'
	-D DEVICE_TYPE_ID='"6aa5d9d7-b1c8-40e1-b6eb-ce6b622b0be1"'

[env:esp32-s3-4g-dbg]
custom_firmware_name = ima_esp32_s3_4g_dbg
extends = esp32-s3
lib_deps =
	${env.lib_deps}
	${mainline.lib_deps}
	${gsm.lib_deps}
build_flags =
	${env.build_flags}
	${dbg.build_flags}
	-D DEVICE_TYPE_NAME='"Inamata ESP32-S3 4G"'
	-D DEVICE_TYPE_ID='"60b60acd-a2b9-4215-a860-80c941fbb7dc"'
	-D WEBSOCKETS_NETWORK_TYPE=10
	-D TINY_GSM_MODEM_A7672X

[env:voc-sensor-mk1]
custom_firmware_name = ima_voc_sensor_mk1
extends = esp32-s3
board = esp32s3box
board_build.partitions = default_16MB.csv
upload_flags = --no-stub
build_unflags =
	${esp32-s3.build_unflags}
    -D BOARD_HAS_PSRAM
lib_deps = 
	${env.lib_deps}
	${mainline.lib_deps}
build_flags = 
	${env.build_flags}
	${esp32-s3.build_flags}
	-D DEVICE_TYPE_NAME='"Inamata VOC Sensor MK1"'
	-D DEVICE_TYPE_ID='"d8e85307-f6bb-44db-8387-2022538d5a72"'
	-D DEVICE_TYPE_VOC_SENSOR_MK1
	-D FIXED_PERIPHERALS_ACTIVE

[env:voc-sensor-mk1-dbg]
custom_firmware_name = ima_voc_sensor_mk1_dbg
extends = env:voc-sensor-mk1
build_flags =
	${env:voc-sensor-mk1.build_flags}
	${dbg.build_flags}

[env:tiaki-co2-monitor]
custom_firmware_name = ima_tiaki_co2_monitor
extends = esp32-s3
board = ima_tiaki_co2_monitor_esp32s3
board_build.partitions = default_16MB.csv
upload_flags = --no-stub
build_unflags =
	${esp32-s3.build_unflags}
lib_deps =
	${env.lib_deps}
	${mainline.lib_deps}
build_flags =
	${env.build_flags}
	${esp32-s3.build_flags}
	-D ARDUINO_USB_MODE
	-D ARDUINO_USB_CDC_ON_BOOT
	-D DEVICE_TYPE_NAME='"Inamata Tiaki CO2 Monitor"'
	-D DEVICE_TYPE_ID='"ab6fb457-09ce-4772-a48d-96d9dbd8ab36"'
	-D DEVICE_TYPE_TIAKI_CO2_MONITOR
	-D FIXED_PERIPHERALS_ACTIVE

[env:tiaki-co2-monitor-dbg]
custom_firmware_name = ima_tiaki_co2_monitor_dbg
extends = env:tiaki-co2-monitor
build_flags =
	${env:tiaki-co2-monitor.build_flags}
	${dbg.build_flags}

[env:fire-data-logger]
custom_firmware_name = ima_fire_data_logger
extends=esp32-s3
board = ima_fire_data_logger_esp32s3
board_build.partitions = default_16MB.csv
lib_deps = 
	${env.lib_deps}
	${mainline.lib_deps}
	${gsm.lib_deps}
build_flags = 
	${env.build_flags}
	${esp32-s3.build_flags}
	-D DEVICE_TYPE_NAME='"Inamata Fire Data Logger"'
	-D DEVICE_TYPE_ID='"0584aa6a-40c7-414e-ac4b-3214f719dcac"'
	-D DEVICE_TYPE_FIRE_DATA_LOGGER
	-D FIXED_PERIPHERALS_ACTIVE
	-D ARDUINO_USB_CDC_ON_BOOT=1
	-D ARDUINO_USB_MODE=1
	-D GSM_NETWORK
	-D CONFIGURATION_MANAGER
	-D RTC_MANAGER
	-D WEBSOCKETS_NETWORK_TYPE=10
	-D TINY_GSM_MODEM_SIM7600

[env:fire-data-logger-dbg]
custom_firmware_name = ima_fire_data_logger_dbg
extends = env:fire-data-logger
build_flags =
	${env:fire-data-logger.build_flags}
	${dbg.build_flags}
	; Log TinyGSM commands
	-D DUMP_AT_COMMANDS
	; Log SSLClient actions
	; -D DEBUG_ESP_PORT=Serial
	; -D CORE_DEBUG_LEVEL=5
; monitor_filters = esp32_exception_decoder
; build_type = debug
; board_build.partitions = huge_app.csv
