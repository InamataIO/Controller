; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
custom_firmware_version = 1.0.1
build_flags = 
	-D ARDUINOJSON_USE_LONG_LONG=1
	-D _TASK_STATUS_REQUEST
	-D _TASK_TIMEOUT
	-D _TASK_OO_CALLBACKS
	-D _TASK_TIMECRITICAL
	-D _TASK_WDT_IDS
	-D _TASK_DEBUG
	-D _TASK_EXPOSE_CHAIN
lib_deps = 
	arkhipenko/TaskScheduler@^3.7
	bblanchon/ArduinoJson@^7.0.4
	links2004/WebSockets@^2.4.1
	git+https://github.com/tzapu/WiFiManager.git#v2.0.17
board_build.filesystem = littlefs
build_unflags = -fno-rtti
monitor_speed = 115200
upload_speed = 921600
extra_scripts = pre:insert_firmware_version.py

[dbg]
; build_type = debug
build_flags =
	-D ENABLE_TRACE
	; -D AC_DEBUG
	; -D DEBUG_ESP_PORT=Serial

[mainline]
lib_deps = 
	milesburton/DallasTemperature@^3.11.0
	claws/BH1750@^1.1.4
	robtillaart/Max44009@^0.6.0
	SparkFun BME280@^2.0.1
	Adafruit NeoPixel@^1.10.5
	adafruit/Adafruit ADS1X15@^2.5.0
	dfrobot/DFRobot_SGP40@^1.0.4
	lime-labs/Lime Labs HDC2080@^1.1.2
	git+https://github.com/InamataCo/ezo-i2c-sensors.git#v3

[esp32]
platform = espressif32@6.7.0
; Bug in FSImpl.h introduced in 2.0.6. Resolved in 3.0.0-alpha3
; https://github.com/espressif/arduino-esp32/issues/7585#issuecomment-1894210320
platform_packages = framework-arduinoespressif32@https://github.com/espressif/arduino-esp32#2.0.5
board = esp32doit-devkit-v1
board_build.partitions = min_spiffs.csv
framework = arduino
build_unflags = ${env.build_unflags}
monitor_speed = ${env.monitor_speed}
upload_speed = ${env.upload_speed}
extra_scripts = ${env.extra_scripts}
board_build.embed_files = data/cert/x509_crt_bundle.bin

[esp32-s3]
build_flags = 
	-D ARDUINO_ESP32S3
platform = espressif32@6.7.0
; Bug in FSImpl.h introduced in 2.0.6. Resolved in 3.0.0-alpha3
; https://github.com/espressif/arduino-esp32/issues/7585#issuecomment-1894210320
board = esp32-s3-devkitc-1
board_build.partitions = default_8MB.csv
framework = arduino
build_unflags = ${env.build_unflags}
monitor_speed = ${env.monitor_speed}
extra_scripts = ${env.extra_scripts}
board_build.embed_files = data/cert/x509_crt_bundle.bin

[esp8266]
lib_deps =
	bblanchon/StreamUtils@~1.7.0
build_flags = 
	-D MINIMAL_BUILD


[env:esp32doit-devkit-v1]
custom_firmware_name = ima_esp32
extends = esp32
lib_deps = 
	${env.lib_deps}
	${mainline.lib_deps}
build_flags = 
	${env.build_flags}

[env:esp32doit-devkit-v1-dbg]
custom_firmware_name = ima_esp32_dbg
extends = env:esp32doit-devkit-v1
build_flags =
	${env:esp32doit-devkit-v1.build_flags}
	${dbg.build_flags}

[env:esp32-s3-devkitc-1]
custom_firmware_name = ima_esp32_s3
extends = esp32-s3
lib_deps = 
	${env.lib_deps}
	${mainline.lib_deps}
build_flags = 
	${env.build_flags}
	${esp32-s3.build_flags}

[env:voc-sensor-mk1]
custom_firmware_name = ima_voc_sensor_mk1
extends = esp32-s3
board = esp32s3box
board_build.partitions = default_16MB.csv
upload_flags = --no-stub
build_unflags =
	${esp32-s3.build_unflags}
    -D BOARD_HAS_PSRAM
lib_deps = 
	${env.lib_deps}
	${mainline.lib_deps}
build_flags = 
	${env.build_flags}
	${esp32-s3.build_flags}
	${dbg.build_flags}

[env:voc-sensor-mk1-dbg]
custom_firmware_name = ima_voc_sensor_mk1_dbg
extends = env:voc-sensor-mk1
build_flags =
	${env:voc-sensor-mk1.build_flags}
	${dbg.build_flags}

; Athom 16A EU V2 Power Monitoring Plug (PG01V2-EU16A-TAS)
[env:athom-plug-v2]
custom_firmware_name = ima_athom_plug_v2
platform = espressif8266
framework = arduino
board = esp8285
board_build.ldscript = "eagle.flash.2m1m.ld"
upload_resetmethod = nodemcu
lib_deps = 
	${env.lib_deps}
	${esp8266.lib_deps}
build_flags = 
	${env.build_flags}
	${esp8266.build_flags}
	-D ATHOM_PLUG_V2
monitor_filters = esp8266_exception_decoder, default
build_unflags = ${env.build_unflags}
monitor_speed = ${env.monitor_speed}
upload_speed = ${env.upload_speed}
extra_scripts = ${env.extra_scripts}

[env:athom-plug-v2-dbg]
custom_firmware_name = ima_athom_plug_v2_dbg
extends = env:athom-plug-v2
build_flags =
	${env:athom-plug-v2.build_flags}
	${dbg.build_flags}

[env:esp8266]
custom_firmware_name = ima_esp8266
platform = espressif8266
framework = arduino
board = nodemcuv2
lib_deps = 
	${env.lib_deps}
	${esp8266.lib_deps}
build_flags = 
	${env.build_flags}
	${esp8266.build_flags}
build_unflags = ${env.build_unflags}
monitor_speed = ${env.monitor_speed}
upload_speed = ${env.upload_speed}
extra_scripts = ${env.extra_scripts}